// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡∏≤‡∏° alert_days ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏á‡∏ß‡∏î
require('dotenv').config();
const { Pool } = require('pg');
const { DateTime } = require('luxon');

const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT) || 5432,
  database: process.env.DB_NAME || 'contract_db',
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASS || '1234'
});

async function testAlertByDays() {
  console.log('========================================');
  console.log('üîî ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡∏≤‡∏° Alert Days');
  console.log('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:', DateTime.now().setZone('Asia/Bangkok').toFormat('dd/MM/yyyy'));
  console.log('========================================\n');
  
  try {
    // 1. ‡πÅ‡∏™‡∏î‡∏á‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏° alert_days
    console.log('üìã ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö:\n');
    const allPeriods = await pool.query(`
      SELECT c.contract_no, c.status, c.alert_emails,
             p.period_no, TO_CHAR(p.due_date, 'YYYY-MM-DD') as due_date,
             p.alert_days,
             (p.due_date::date - CURRENT_DATE) as days_until_due
      FROM contracts c
      JOIN contract_periods p ON c.id = p.contract_id
      WHERE c.deleted_flag = FALSE
        AND c.status IN ('ACTIVE', 'CRTD')
        AND p.due_date IS NOT NULL
        AND p.due_date >= CURRENT_DATE
      ORDER BY c.contract_no, p.period_no
    `);
    
    console.log(`‡∏û‡∏ö ${allPeriods.rows.length} ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô\n`);
    
    for (const period of allPeriods.rows) {
      const dueDate = DateTime.fromISO(period.due_date);
      console.log(`üìå ‡∏™‡∏±‡∏ç‡∏ç‡∏≤: ${period.contract_no} - ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà ${period.period_no}`);
      console.log(`   ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î: ${dueDate.toFormat('dd/MM/yyyy')}`);
      console.log(`   ‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${period.days_until_due} ‡∏ß‡∏±‡∏ô`);
      console.log(`   ‡πÅ‡∏à‡πâ‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤: ${period.alert_days || '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á'} ‡∏ß‡∏±‡∏ô`);
      console.log(`   ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${period.alert_emails ? '‚úì ‡∏°‡∏µ' : '‚úó ‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (period.alert_days && period.days_until_due == period.alert_days) {
        console.log(`   ‚ö†Ô∏è >>> ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ! <<<`);
      }
      console.log('');
    }
    
    // 2. ‡πÅ‡∏™‡∏î‡∏á‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (‡∏ï‡∏≤‡∏° query ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á)
    console.log('\n========================================');
    console.log('üîî ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ:');
    console.log('========================================\n');
    
    const todayAlerts = await pool.query(`
      SELECT c.contract_no, c.contact_name, c.department, c.alert_emails,
             p.period_no, p.due_date, p.alert_days,
             (p.due_date::date - CURRENT_DATE) as days_until_due
      FROM contracts c
      JOIN contract_periods p ON c.id = p.contract_id
      WHERE c.deleted_flag = FALSE
        AND c.status IN ('ACTIVE', 'CRTD')
        AND p.due_date IS NOT NULL
        AND p.due_date >= CURRENT_DATE
        AND p.alert_days IS NOT NULL
        AND p.alert_days > 0
        AND (p.due_date::date - CURRENT_DATE) = p.alert_days
        AND c.alert_emails IS NOT NULL 
        AND c.alert_emails != ''
    `);
    
    if (todayAlerts.rows.length > 0) {
      console.log(`‚úÖ ‡∏û‡∏ö ${todayAlerts.rows.length} ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ:\n`);
      
      for (const alert of todayAlerts.rows) {
        const dueDate = DateTime.fromISO(alert.due_date);
        console.log(`üìß ‡∏™‡∏±‡∏ç‡∏ç‡∏≤: ${alert.contract_no} - ${alert.contact_name || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠'}`);
        console.log(`   ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà: ${alert.period_no}`);
        console.log(`   ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î: ${dueDate.toFormat('dd/MM/yyyy')}`);
        console.log(`   ‡πÅ‡∏à‡πâ‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤: ${alert.alert_days} ‡∏ß‡∏±‡∏ô (‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${alert.days_until_due} ‡∏ß‡∏±‡∏ô)`);
        console.log(`   ‡∏™‡πà‡∏á‡∏ñ‡∏∂‡∏á: ${alert.alert_emails}`);
        console.log('');
      }
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\n');
      console.log('‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:');
      console.log('1. ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç (days_until_due = alert_days)');
      console.log('2. ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ alert_emails');
      console.log('3. ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ACTIVE ‡∏´‡∏£‡∏∑‡∏≠ CRTD');
    }
    
    // 3. ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Cron Schedule
    console.log('\n========================================');
    console.log('‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Alert Schedule:');
    console.log('========================================\n');
    console.log(`ALERT_SCHEDULE: ${process.env.ALERT_SCHEDULE || '0 8 * * *'}`);
    
    if (process.env.ALERT_SCHEDULE === '0 8 * * *') {
      console.log('‚Üí ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 8:00 ‡∏ô. ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô (Production)');
    } else if (process.env.ALERT_SCHEDULE === '* * * * *') {
      console.log('‚Üí ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏ô‡∏≤‡∏ó‡∏µ (Testing)');
    }
    
    console.log('\n‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
  } finally {
    await pool.end();
  }
}

testAlertByDays();
