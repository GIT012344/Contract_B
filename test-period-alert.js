// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô
require('dotenv').config();
const { Pool } = require('pg');
const nodemailer = require('nodemailer');
const { DateTime } = require('luxon');

// Database config
const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT) || 5432,
  database: process.env.DB_NAME || 'contract_db',
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASSWORD || '1234'
});

console.log('DB Config:', {
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT) || 5432,
  database: process.env.DB_NAME || 'contract_db',
  user: process.env.DB_USER || 'postgres'
});

// Email transporter
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: 'moonlightvilip@gmail.com',
    pass: 'lwnj edbh cnby uvuq'
  },
  tls: {
    rejectUnauthorized: false
  }
});

async function testPeriodAlerts() {
  console.log('\n========================================');
  console.log('üîî ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô');
  console.log('‡πÄ‡∏ß‡∏•‡∏≤:', DateTime.now().setZone('Asia/Bangkok').toFormat('dd/MM/yyyy HH:mm:ss'));
  console.log('========================================\n');

  try {
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ñ‡∏∂‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    console.log('üìã ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô...');
    
    // Query ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÉ‡∏ô alertJob.js ‡πÅ‡∏ï‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
    const query = `
      SELECT c.id as contract_id, c.contract_no, c.contact_name, 
             c.status as contract_status, c.alert_emails, c.department, c.contact_person,
             p.id as period_id, p.period_no, 
             TO_CHAR(p.due_date, 'YYYY-MM-DD') as due_date,
             p.alert_days, p.status as period_status,
             (p.due_date::date - CURRENT_DATE) as days_until_due
      FROM contracts c
      JOIN contract_periods p ON c.id = p.contract_id
      WHERE c.deleted_flag = FALSE
        AND p.due_date IS NOT NULL
        AND p.due_date >= CURRENT_DATE
      ORDER BY days_until_due ASC, c.contract_no, p.period_no
    `;
    
    const result = await pool.query(query);
    console.log(`‡∏û‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${result.rows.length} ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô`);
    
    if (result.rows.length > 0) {
      console.log('\nüìä ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô:');
      console.log('=====================================');
      
      const alertPeriods = [];
      
      for (const period of result.rows) {
        const dueDate = DateTime.fromISO(period.due_date);
        const daysUntilDue = period.days_until_due;
        const alertDays = period.alert_days || 7; // default 7 ‡∏ß‡∏±‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
        
        console.log(`\nüìå ‡∏™‡∏±‡∏ç‡∏ç‡∏≤: ${period.contract_no} - ${period.contact_name || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠'}`);
        console.log(`   ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏±‡∏ç‡∏ç‡∏≤: ${period.contract_status}`);
        console.log(`   ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà: ${period.period_no}`);
        console.log(`   ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î: ${dueDate.toFormat('dd/MM/yyyy')}`);
        console.log(`   ‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${daysUntilDue} ‡∏ß‡∏±‡∏ô`);
        console.log(`   ‡πÅ‡∏à‡πâ‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤: ${alertDays} ‡∏ß‡∏±‡∏ô`);
        console.log(`   ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏á‡∏ß‡∏î: ${period.period_status || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
        console.log(`   ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ${period.alert_emails || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        const shouldAlert = period.contract_status === 'ACTIVE' && 
                          daysUntilDue <= alertDays && 
                          period.alert_emails && 
                          period.alert_emails.trim();
        
        if (shouldAlert) {
          console.log(`   ‚úÖ ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÉ‡∏ä‡πà`);
          alertPeriods.push(period);
        } else {
          console.log(`   ‚ùå ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÑ‡∏°‡πà`);
          if (period.contract_status !== 'ACTIVE') {
            console.log(`      - ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ACTIVE`);
          }
          if (daysUntilDue > alertDays) {
            console.log(`      - ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (${daysUntilDue} > ${alertDays})`);
          }
          if (!period.alert_emails || !period.alert_emails.trim()) {
            console.log(`      - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô`);
          }
        }
      }
      
      // ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
      if (alertPeriods.length > 0) {
        console.log('\n========================================');
        console.log(`üìß ‡∏û‡∏ö ${alertPeriods.length} ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô`);
        console.log('========================================\n');
        
        // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤
        const contractGroups = {};
        alertPeriods.forEach(p => {
          if (!contractGroups[p.contract_no]) {
            contractGroups[p.contract_no] = {
              contract_no: p.contract_no,
              contact_name: p.contact_name,
              department: p.department,
              alert_emails: p.alert_emails,
              periods: []
            };
          }
          contractGroups[p.contract_no].periods.push(p);
        });
        
        for (const contractNo in contractGroups) {
          const contract = contractGroups[contractNo];
          const emails = contract.alert_emails.split(',').map(e => e.trim()).filter(Boolean);
          
          console.log(`\nüì® ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤: ${contractNo}`);
          console.log(`   ‡∏ñ‡∏∂‡∏á: ${emails.join(', ')}`);
          console.log(`   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏ß‡∏î: ${contract.periods.length} ‡∏á‡∏ß‡∏î`);
          
          // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•
          const periodRows = contract.periods.map(p => {
            const dueDate = DateTime.fromISO(p.due_date);
            return `
              <tr>
                <td style="padding: 8px; border: 1px solid #ddd;">${p.period_no}</td>
                <td style="padding: 8px; border: 1px solid #ddd;">${dueDate.toFormat('dd/MM/yyyy')}</td>
                <td style="padding: 8px; border: 1px solid #ddd;">${p.days_until_due} ‡∏ß‡∏±‡∏ô</td>
                <td style="padding: 8px; border: 1px solid #ddd;">${p.period_status || '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£'}</td>
              </tr>
            `;
          }).join('');
          
          const html = `
            <!DOCTYPE html>
            <html>
            <head>
              <meta charset="UTF-8">
              <style>
                body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
                .container { max-width: 700px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 10px 10px 0 0; }
                .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
                .alert-box { background: white; padding: 20px; border-left: 4px solid #ffc107; margin: 20px 0; border-radius: 5px; }
                table { width: 100%; border-collapse: collapse; margin: 20px 0; }
                th { background: #6c757d; color: white; padding: 10px; text-align: left; }
                .footer { text-align: center; color: #6c757d; font-size: 12px; margin-top: 30px; padding-top: 20px; border-top: 1px solid #dee2e6; }
              </style>
            </head>
            <body>
              <div class="container">
                <div class="header">
                  <h1 style="margin: 0; font-size: 24px;">üìÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ñ‡∏∂‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î</h1>
                  <p style="margin: 10px 0 0 0; opacity: 0.9;">Contract Period Alert</p>
                </div>
                <div class="content">
                  <div class="alert-box">
                    <h2 style="margin: 0 0 10px 0; color: #856404;">‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°</h2>
                    <p><strong>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏ç‡∏ç‡∏≤:</strong> ${contract.contract_no}</p>
                    <p><strong>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ç‡∏ç‡∏≤:</strong> ${contract.contact_name || '-'}</p>
                    <p><strong>‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô:</strong> ${contract.department || '-'}</p>
                  </div>
                  
                  <h3>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô:</h3>
                  <table>
                    <thead>
                      <tr>
                        <th>‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà</th>
                        <th>‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î</th>
                        <th>‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏ß‡∏•‡∏≤</th>
                        <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                      </tr>
                    </thead>
                    <tbody>
                      ${periodRows}
                    </tbody>
                  </table>
                  
                  <div style="background: #fff3cd; padding: 15px; border-radius: 5px; margin-top: 20px;">
                    <p style="margin: 0; color: #856404;">
                      <strong>üìå ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                    </p>
                  </div>
                  
                  <div class="footer">
                    <p>‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</p>
                    <p>Contract Management System - Period Alert</p>
                    <p>${DateTime.now().setZone('Asia/Bangkok').toFormat('dd/MM/yyyy HH:mm:ss')}</p>
                  </div>
                </div>
              </div>
            </body>
            </html>
          `;
          
          try {
            const info = await transporter.sendMail({
              from: 'Contract Alert System <moonlightvilip@gmail.com>',
              to: emails.join(', '),
              subject: `üìÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ñ‡∏∂‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î - ‡∏™‡∏±‡∏ç‡∏ç‡∏≤ ${contractNo}`,
              html: html
            });
            
            console.log(`   ‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Message ID: ${info.messageId}`);
            
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log
            await pool.query(
              `INSERT INTO user_activity_logs (user_id, action, details, ip_address) 
               VALUES ($1, $2, $3, $4)`,
              ['system', 'ALERT_PERIOD_SENT', 
               `Sent period alert for contract ${contractNo} (${contract.periods.length} periods)`,
               '127.0.0.1']
            );
            
          } catch (emailError) {
            console.error(`   ‚ùå ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:`, emailError.message);
          }
        }
      } else {
        console.log('\n‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ');
      }
    } else {
      console.log('\n‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
    }
    
    console.log('\n========================================');
    console.log('‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
    console.log('========================================\n');
    
  } catch (error) {
    console.error('\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
    console.error(error);
  } finally {
    await pool.end();
  }
}

// ‡∏£‡∏±‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
testPeriodAlerts();
